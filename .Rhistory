library(ggplot2)
remove.packages(rlang)
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(ggplot2)
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
library(ggplot2)
library(ggplot2)
data(cars)
ggplot(cars, aes(x = speed, y = dist)) + geom_line()
library(ggplot2)
data(cars)
ggplot(cars, aes(x = speed, y = dist)) + geom_line()
data(iris)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
library(ggplot2)
data(cars)
ggplot(cars, aes(x = speed, y = dist)) + geom_line()
data(iris)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width,
color = Species)) + geom_point(size = 3)
library(ggplot2)
data(cars)
ggplot(cars, aes(x = speed, y = dist)) + geom_line()
data(iris)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width,
color = Species)) + geom_point(size = 3)
data(diamonds)
head(diamonds)
ggplot(diamonds, aes(x = carat, y = price,
color = color)) + geom_point()
ggplot(diamonds, aes(x = carat, y = price)) +
geom_point(alpha = 0.5) + facet_wrap(~color,
ncol = 4)
data(faithful)
data(faithful)
hist(faithful$eruptions)
library(ggplot2)
data(cars)
ggplot(cars, aes(x = speed, y = dist)) + geom_line()
data(iris)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width,
color = Species)) + geom_point(size = 3)
data(diamonds)
head(diamonds)
ggplot(diamonds, aes(x = carat, y = price,
color = color)) + geom_point()
ggplot(diamonds, aes(x = carat, y = price)) +
geom_point(alpha = 0.5) + facet_wrap(~color,
ncol = 4)
data(faithful)
hist(faithful$eruptions)
ggplot(faithful, aes(x = eruptions)) + geom_histogram()
library(ggplot2)
data(cars)
ggplot(cars, aes(x = speed, y = dist)) + geom_line()
data(iris)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width,
color = Species)) + geom_point(size = 3)
data(diamonds)
head(diamonds)
ggplot(diamonds, aes(x = carat, y = price,
color = color)) + geom_point()
ggplot(diamonds, aes(x = carat, y = price)) +
geom_point(alpha = 0.5) + facet_wrap(~color,
ncol = 4)
data(faithful)
hist(faithful$eruptions)
ggplot(faithful, aes(x = eruptions)) + geom_histogram()
ggplot(faithful, aes(x = eruptions)) +
geom_histogram(bins = 9)
ggplot(faithful, aes(x = eruptions)) +
geom_histogram(bins = 9, fill = "#9ecae1",
color = "black")
ggplot(faithful, aes(x = eruptions)) +
geom_histogram(bins = 9, fill = "#9ecae1",
color = "black") + theme_bw()
fig_iris = ggplot(iris, aes(x = Species,
y = Sepal.Length, fill = Species)) +
geom_boxplot() + scale_fill_manual(values = c("#2b8cbe""#e34a33", "#fdbb84"))
fig_iris = ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +geom_boxplot() + scale_fill_manual(values = c("#2b8cbe""#e34a33", "#fdbb84"))
fig_iris = ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +geom_boxplot() + scale_fill_manual(values = c("#2b8cbe", "#e34a33", "#fdbb84"))
print(fig_iris)
pdf(file = "SepalLengthBoxplot_iris.pdf",
width = 5, height = 4)
print(fig_iris)
dev.off()
getwd()
setwd("~/STA 600")
fig_iris = ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +geom_boxplot() + scale_fill_manual(values = c("#2b8cbe", "#e34a33", "#fdbb84"))
print(fig_iris)
setwd("~/STA 600")
pdf(file = "SepalLengthBoxplot_iris.pdf",
width = 5, height = 4)
print(fig_iris)
dev.off()
library(FinalRPackage)
X = matrix(rnorm(24), nrow = 6)
X
y = c(1,3,4,5,6,7)
gp_prior(X, Y, b = 12)
gp_prior(X, y, b = 12)
library(FinalRPackage)
X = matrix(rnorm(24), nrow = 6)
y = c(1,3,4,5,6,7)
gp_prior(X, y, b = 12)
X[1:4,]
X[1:4-1,]
gp_prior(X, y, b = 3)
dim(X)
X[1:3-1, ]
debug(gp_prior)
gp_prior(X, y, b = 3)
X = matrix(rnorm(24), nrow = 6)
X
gp_prior(X, y, b = 3)
gp_prior(X, y, b = 3)
gp_prior(X, y, b = 3)
X
y
X
y
gp_prior(X, y, b = 2)
x
X
gp_prior(X, y, b)
gp_prior(X, y, b = 1)
gp_prior(X, y = c(1,2,3,4,5,6), b = 1)
gp_prior(X, y = c(1,2,3,4,5,6), b = 1)
gp_prior(X, Y = c(1,2,3,4,5,6), b = 1)
Y
library(FinalRPackage)
X = matrix(rnorm(24), nrow = 4)
X
gp_prior(X, Y = c(1,2,2,2), b = 3)
gp_prior(X = matrix(rnorm(24), nrow = 4), Y = c(1,2,2,2), b = 3)
debug(gp_prior)
gp_prior(X = matrix(rnorm(24), nrow = 4), Y = c(1,2,2,2), b = 3)
library(FinalRPackage)
library(FinalRPackage)
x = matrix(rnorm(24), nrow = 4)
y = c(1,2,3,4)
gp_prior(X, y, b = 1)
debug(gp_prior)
gp_prior(X, y, b = 1)
Xc
gp_prior(X, y, b = 4)
gp_prior(X, y, b = 3)
Xc
library(FinalRPackage)
x = matrix(rnorm(24), nrow = 4)
gp_prior(X, y, b = 3)
debug(gp_prior)
gp_prior(X, y, b = 3)
debug(gp_prior)
gp_prior(X, y, b = 3, sigma_hat 0.3, l = 2)
gp_prior(X, y, b = 3, sigma_hat= 0.3, l = 2)
gp_prior(X, y, b = 3, degree = 2)
gp_prior(X, y, b = 3, degree = 1)
?poly
y
y = y[-c(1:2)]
y
X
library(FinalRPackage)
x = matrix(rnorm(24), nrow = 4)
y = y[-c(1:2)]
debug(gp_prior)
gp_prior(X, y, b = 3, degree = 1)
y
Y
x = matrix(rnorm(24), nrow = 4)
y = c(1,2,3,4)
gp_prior(X, y, b = 3, degree = 1)
lm(Y ~ poly(X, degree = 1))
Y
y
lm(Yy ~ poly(X, degree = 1))
lm(y ~ poly(X, degree = 1))
gp_prior(X, y, b = 3, degree = 1)
library(FinalRPackage)
x = matrix(rnorm(24), nrow = 4)
y = c(1,2,3,4)
debug(gp_prior)
gp_prior(X, y, b = 3, degree = 1)
gp_prior(X, y, b = 3, degree = 1)
gp_prior(X, y, b = 3, degree = 1, sigma_hat = 0.3, l = 2)
lm(y ~ poly(X, degree = 1))
func = lm(y ~ poly(X, degree = 1))
summary(func)
func = lm(y ~ poly(X, degree = 1, raw = T))
summary(func)
func = lm(y ~ poly(X, degree = 1, raw = F))
summary(func)
?poly
library(FinalRPackage)
x = matrix(rnorm(24), nrow = 4)
y = c(1,2,3,4)
gp_prior(X = x, Y = y, degree = 1, sigma_hat = 0.03, l = 2)
gp_prior(X = x, Y = y, degree = 1, b = 3, sigma_hat = 0.03, l = 2)
gp_prior(X = x, Y = y, degree = 2, b = 3, sigma_hat = 0.03, l = 2)
lm(Y ~ X1 + X1^2)
lm(y ~ x1 + x1^2)
lm(y ~ x + x^2)
lm(y ~ x)
lm(y ~ x + 1)
lm(y ~ x - 1)
X
y
x = matrix(rnorm(16), nrow = 4)
y
lm(y ~ x - 1)
lm(y ~ x)
X
x
y
lm(y ~ x)
lm(y ~ x)
lm(y ~ x - 1)
lm(y ~ cbind(1, x))
cbind(1, x)
x1 = cbind(1, x)
lm(y ~ x1)
lm(y ~ poly(x[,1], 2) + x1[,2])
lm(y ~ poly(x[,1], 2) + x1[,3])
lm(y ~ poly(x[,1], 2) + x1[,4])
sc = seq(0, 1, length.out = 100)
st = seq(1, 2, length.out = 100)
yc = 1 * sc + rnorm(100, 0, 0.25)
yt = 2 + 1*st + rnorm(100, 0, 0.25)
plot(c(sc, st), c(yc, yt))
lmc = lm(yc ~ sc)
lmt = lm(yt ~ st)
plot(c(sc, st), c(yc, yt))
lines(sc, lmc$fitted.values, col = 'red')
lines(st, lmt$fitted.values, col = 'red')
yc
yt
sc
st
x
x = seq(1, 2, length.out = 100)
x
x = seq(1, 2, length.out = 100)
xc = x[1: 30, ]
x = seq(1, 2, length.out = 100)
xc = x[1:30]
plot(xc)
plot(xt)
x = seq(1, 2, length.out = 100)
xc = x[1:30]
xt = x[32:100]
plot(c(xc, xt))
length(xc)
length(xt)
sc
st
yc
yt
cars
plot(cars$speed, cars$dist)
plot(cars$dist, cars$speed)
plot(cars$speed, cars$dist)
xc = cars$dist[1:24]
xt = cars$dist[26:50]
yc = cars$speed[1:24]
yt = cars$speed[26:50]
lmc = lm(yc ~ xc)
lmt = lm(yt ~ yt)
yc
yt
xc
lmc
lmc$fitted.values
cars
xc = cars$dist[1:24]
xt = cars$dist[26:50]
yc = cars$speed[1:24]
yt = cars$speed[26:50]
plot(c(xc, xt), c(yc, yt))
lmc = lm(yc ~ xc)
lmt = lm(yt ~ yt)
plot(c(xc, xt), c(yc, yt))
cars
xc = cars$dist[1:24]
xt = cars$dist[26:50]
yc = cars$speed[1:24]
yt = cars$speed[26:50]
plot(c(xc, xt), c(yc, yt))
lmc = lm(yc ~ xc)
lmt = lm(yt ~ yt)
plot(c(xc, xt), c(yc, yt))
lines(xc, lmc$fitted.values, col = 'red')
lines(xt, lmt$fitted.values, col = 'blue')
cars[25]
cars[25, ]
cars[24, ]
cars[25, ]
cars[24, ]
cars[26, ]
xt
yt
cars
xc = cars$speed[1:24]
xt = cars$speed[26:50]
yc = cars$distance[1:24]
yt = cars$distance[26:50]
plot(c(xc, xt), c(yc, yt))
lmc = lm(yc ~ xc)
yc
yc = cars$distance[1:24]
yc
cars
xc = cars$speed[1:24]
xt = cars$speed[26:50]
yc = cars$dist[1:24]
yt = cars$dist[26:50]
plot(c(xc, xt), c(yc, yt))
lmc = lm(yc ~ xc)
lmt = lm(yt ~ yt)
plot(c(xc, xt), c(yc, yt))
lines(xc, lmc$fitted.values, col = 'red')
lines(xt, lmt$fitted.values, col = 'blue')
cars[25, ]
library(GPRdd)
?gp_prior
?gp_prior
